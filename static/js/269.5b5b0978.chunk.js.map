{"version":3,"file":"static/js/269.5b5b0978.chunk.js","mappings":"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","sources":["components/WidgetConfiguration.js"],"sourcesContent":["import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { action } from 'mobx';\nimport Grid from '@mui/material/Grid';\nimport { observer } from 'mobx-react-lite';\nimport { headlightList, taillightList, getDeviceLights } from '../constants';\nimport { getDevice, deviceList } from '../widgetConstants';\nimport AppSelect from '../inputs/AppSelect';\nimport LightConfiguration from './LightConfiguration';\nimport ConfigurationResult from './ConfigurationResult';\nimport IndividualLightNetwork from './IndividualLightNetwork';\nimport ParseConfiguration from './ParseConfiguration';\n\nconst Root = styled('div')(({ theme }) => ({\n  [`& .MuiCardHeader-root`]: {\n    backgroundColor:\n      theme.palette.mode === 'light'\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700]\n  },\n\n  [`& .MuiCardHeader-root .ElementWithHelp-root`]: {\n    justifyContent: 'center'\n  },\n\n  [`& .MuiCard-root`]: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default observer(({ configuration, setConfiguration }) => {\n  const device = getDevice(configuration.device);\n  const setNewDevice = action((newDevice) => {\n    configuration.setDevice(newDevice);\n  });\n  const setNewConfiguration = action((newConfiguration) => {\n    setConfiguration(newConfiguration);\n  });\n\n  return (\n    <Root>\n      <ParseConfiguration setConfiguration={setNewConfiguration} deviceList={deviceList} />\n      <Grid container spacing={2} sx={{ marginBottom: 2 }} justifyContent=\"center\">\n        <Grid item xs={12} sm={12}>\n          <AppSelect required items={deviceList} label=\"Garmin device\" setter={setNewDevice} value={configuration.device} />\n        </Grid>\n      </Grid>\n      <IndividualLightNetwork device={device} configuration={configuration} />\n      { device ? (\n        <React.Fragment>\n          <LightConfiguration\n            useIndividualNetwork={configuration.useIndividualNetwork}\n            device={device}\n            totalLights={configuration.getTotalLights()}\n            lightType=\"Headlight\"\n            lightList={getDeviceLights(device, headlightList, configuration.useIndividualNetwork)}\n            light={configuration.headlight}\n            setLight={configuration.setHeadlight}\n            setLightModes={configuration.setHeadlightModes}\n            setAdditionalLightModes={configuration.setHeadlightAdditionalModes}\n            lightPanel={configuration.headlightPanel}\n            setLightPanel={configuration.setHeadlightPanel}\n            lightSettings={configuration.headlightSettings}\n            setLightSettings={configuration.setHeadlightSettings}\n            deviceNumber={configuration.headlightDeviceNumber}\n            setDeviceNumber={configuration.setHeadlightDeviceNumber}\n            serialNumber={configuration.headlightSerialNumber}\n            setSerialNumber={configuration.setHeadlightSerialNumber}\n            lightIconColor={configuration.headlightIconColor}\n            setLightIconColor={configuration.setHeadlightIconColor}\n          />\n          <LightConfiguration\n            useIndividualNetwork={configuration.useIndividualNetwork}\n            device={device}\n            totalLights={configuration.getTotalLights()}\n            lightType=\"Taillight\"\n            lightList={getDeviceLights(device, taillightList, configuration.useIndividualNetwork)}\n            light={configuration.taillight}\n            setLight={configuration.setTaillight}\n            setLightModes={configuration.setTaillightModes}\n            setAdditionalLightModes={configuration.setTaillightAdditionalModes}\n            lightPanel={configuration.taillightPanel}\n            setLightPanel={configuration.setTaillightPanel}\n            lightSettings={configuration.taillightSettings}\n            setLightSettings={configuration.setTaillightSettings}\n            deviceNumber={configuration.taillightDeviceNumber}\n            setDeviceNumber={configuration.setTaillightDeviceNumber}\n            serialNumber={configuration.taillightSerialNumber}\n            setSerialNumber={configuration.setTaillightSerialNumber}\n            lightIconColor={configuration.taillightIconColor}\n            setLightIconColor={configuration.setTaillightIconColor}\n          />\n          <ConfigurationResult\n            configuration={configuration}\n            deviceList={deviceList}\n          />\n        </React.Fragment>\n      ) : null }\n    </Root>\n  );\n});\n"],"names":["Root","styled","_ref","theme","backgroundColor","palette","mode","grey","justifyContent","marginTop","spacing","observer","_ref2","configuration","setConfiguration","device","getDevice","setNewDevice","action","newDevice","setDevice","setNewConfiguration","newConfiguration","_jsxs","children","_jsx","ParseConfiguration","deviceList","Grid","container","sx","marginBottom","item","xs","sm","AppSelect","required","items","label","setter","value","IndividualLightNetwork","React","LightConfiguration","useIndividualNetwork","totalLights","getTotalLights","lightType","lightList","getDeviceLights","headlightList","light","headlight","setLight","setHeadlight","setLightModes","setHeadlightModes","setAdditionalLightModes","setHeadlightAdditionalModes","lightPanel","headlightPanel","setLightPanel","setHeadlightPanel","lightSettings","headlightSettings","setLightSettings","setHeadlightSettings","deviceNumber","headlightDeviceNumber","setDeviceNumber","setHeadlightDeviceNumber","serialNumber","headlightSerialNumber","setSerialNumber","setHeadlightSerialNumber","lightIconColor","headlightIconColor","setLightIconColor","setHeadlightIconColor","taillightList","taillight","setTaillight","setTaillightModes","setTaillightAdditionalModes","taillightPanel","setTaillightPanel","taillightSettings","setTaillightSettings","taillightDeviceNumber","setTaillightDeviceNumber","taillightSerialNumber","setTaillightSerialNumber","taillightIconColor","setTaillightIconColor","ConfigurationResult"],"sourceRoot":""}